@use "../breakpoints.scss" as breakpoints;

.hover {
    transition: var(--transition-micro-medium);

    &:hover {
        transform: translateX(var(--static-space-4));
    }
}

.avatar {
    position: sticky;
    height: fit-content;
    top: var(--static-space-64);
}

// Skills Grid Layout
.skillsGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 16px;
    margin-bottom: 32px;
    max-width: 100%;
}

.skillEmblem {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 80px;
    max-width: 120px;
    position: relative;
}

.emblemButton {
    background: none;
    border: 2px solid transparent;
    border-radius: 8px;
    cursor: default;
    padding: 12px 8px;
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: all 0.2s ease;
    width: 100%;
    min-height: 80px;
    justify-content: center;
    position: relative;
    outline: none;
}

/* Connector line from emblem to tooltip */
.emblemButton::after {
    content: '';
    position: absolute;
    bottom: calc(100% + 6px);
    left: 50%;
    transform: translateX(-50%) scaleY(0.6);
    width: 3px;
    height: 18px;
    border-radius: 3px;
    background: #C0C0C0; /* silver for visibility */
    opacity: 0;
    z-index: 101; /* above tooltip pseudo elements */
    transition: opacity 0.2s ease, transform 0.2s ease;
}

.emblemButton:hover {
    transform: scale(1.05);
    border-color: var(--color-neutral-medium);
    background-color: var(--color-neutral-alpha-weak);
}

.emblemButton:focus-visible {
    border-color: var(--color-brand-strong);
    box-shadow: 0 0 0 4px var(--color-brand-alpha-weak);
}

.emblemButton.active {
    border-color: var(--color-brand-strong);
    background-color: var(--color-brand-alpha-weak);
    transform: scale(1.02);
}

.skillLabel {
    margin-top: 8px;
    font-size: 0.8em;
    font-weight: 500;
    color: var(--neutral-on-background-weak);
    text-align: center;
    line-height: 1.2;
}

.skillLabel:hover {
    color: var(--color-neutral-strong);
}



.placeholderIcon {
    width: 32px;
    height: 32px;
    border-radius: 6px;
    background: var(--color-neutral-alpha-medium);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: var(--color-neutral-strong);
    font-size: 14px;
}

.skillDesc {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(6px);
    border: 3px solid #C0C0C0; /* silver */
    border-radius: 20px;
    padding: 16px;
    margin-bottom: 12px;
    width: clamp(280px, 36vw, 480px);
    aspect-ratio: 16 / 9;
    overflow: hidden;
    z-index: 100;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    text-align: left;
    backdrop-filter: blur(4px);
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    transition: opacity 0.2s ease, transform 0.2s ease, visibility 0.2s ease;
}

/* Pinned state: keep tooltip visible */
.show {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    transform: translateX(-50%) translateY(0);
}

/* Light mode - clean light background */
@media (prefers-color-scheme: light) {
    .skillDesc {
        background: linear-gradient(135deg, #f0fdff, #ffffff);
        color: #1f2937; /* Dark gray for light mode */
    }
    
    .skillDesc p {
        color: #1f2937;
        margin: 0;
    }
    
    .skillDesc strong {
        color: #0891b2; /* Cyan accent for emphasis */
    }
    
    .skillDesc::before {
        border-top: 8px solid #ffffff;
    }
}

/* Dark mode - modern dark background with cyan accent */
@media (prefers-color-scheme: dark) {
    .skillDesc {
        background: linear-gradient(135deg, #0f172a, #1e293b);
        color: #e2e8f0; /* Light slate for dark mode */
    }
    
    .skillDesc p {
        color: #e2e8f0;
        margin: 0;
    }
    
    .skillDesc strong {
        color: #22d3ee; /* Bright cyan for emphasis */
    }
    
    .skillDesc::before {
        border-top: 8px solid #1e293b;
    }
}

.skillDesc::before {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
}

.skillDesc::after {
    content: '';
    position: absolute;
    bottom: -9px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-top: 8px solid #C0C0C0; /* silver */
    z-index: -1;
}

/* Show tooltip on hover or keyboard focus (tooltip is sibling of button) */
.emblemButton:hover + .skillDesc,
.emblemButton:focus + .skillDesc,
.emblemButton:focus-visible + .skillDesc {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    transform: translateX(-50%) translateY(0);
}

/* Show connector when hovering/focusing */
.emblemButton:hover::after,
.emblemButton:focus::after,
.emblemButton:focus-visible::after {
    opacity: 1;
    transform: translateX(-50%) scaleY(1);
}

@media (max-width: breakpoints.$s) {
    .avatar {
        top: auto;
    }

    .textAlign {
        text-align: center;
    }

    .blockAlign {
        align-self: center;
    }

    .skillsGrid {
        grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
        gap: 12px;
    }

    .skillDesc {
        position: absolute;
        bottom: calc(100% + 12px);
        left: 50%;
        transform: translateX(calc(-50% + var(--skill-tooltip-shift-x, 0px)));
        margin: 0;
        padding: 12px;
        width: clamp(240px, 78vw, 440px);
        max-width: 90vw;
        max-height: 55vh;
        overflow: auto;
        aspect-ratio: auto;
        z-index: 999;
    }

    /* Hide connector line on mobile-centered tooltip */
    .emblemButton::after {
        display: none;
    }

    .emblemButton:hover::after,
    .emblemButton:focus::after,
    .emblemButton:focus-visible::after {
        display: none;
    }

    .skillDesc::before,
    .skillDesc::after {
        display: none;
    }

    .skillDesc::after {
        display: none;
    }

    .emblemButton:hover + .skillDesc,
    .emblemButton:focus + .skillDesc,
    .emblemButton:focus-visible + .skillDesc {
        transform: translateX(calc(-50% + var(--skill-tooltip-shift-x, 0px)));
    }
}